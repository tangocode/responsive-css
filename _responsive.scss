$xs-a: 0px;
$xs-b: 360px;
$xs-c: 400px;
$xs-d: 480px;
$sm-a: 600px;
$sm-b: 720px;
$sm-c: 840px;
$sm-d: 960px;
$md-a: 1024px;
$md-b: 1280px;
$lg-a: 1440px;
$lg-b: 1600px;
$xl-a: 1920px;
$breakpoints: (('xs-a',$xs-a),('xs-b',$xs-b),('xs-c',$xs-c),('xs-d',$xs-d),('sm-a',$sm-a),('sm-b',$sm-b),('sm-c',$sm-c),('sm-d',$sm-d),('md-a',$md-a),('md-b',$md-b),('lg-a',$lg-a),('lg-b',$lg-b),('xl-a',$xl-a));

$xs: $xs-d;
$sm: $sm-d;
$md: $md-b;
$lg: $lg-b;
$xl: $xl-a;
$breakpoints-short: (('xs',$xs,$sm - 1),('sm',$sm,$md - 1),('md',$md,$lg - 1),('lg',$lg,$xl - 1),('xl',$xl,0));

$breakpoints-columns: (('four',$xs-a + 1,$xs-d),('eight',$xs-d + 1,$sm-c),('twelve',$sm-c + 1,0));

/*
Media Query mixin
Usage:
  @include respond-to(min-width,$sm){
    width: 800px;
  }
*/
@mixin respond-to($val,$query) {
  @media ($val: $query) {
    @content
  }
}
@mixin respond-to-min($query) {
  @media (min-width: $query) {
    @content
  }
}
@mixin respond-to-max($query) {
  @media (max-width: $query) {
    @content
  }
}
@mixin respond-to-min-max($query_min, $query_max) {
  @media (min-width: $query_min) and (max-width: $query_max) {
    @content
  }
}

$col4: (1,2,3,4);
@each $col in $col4 {
  .col-#{$col} {
    width: $col / 4 * 100%;
    @include respond-to-min-max($xs-d + 1,$sm-c){
      width: $col / 8 * 100%;
    }
    @include respond-to-min($sm-c + 1){
      width: $col / 12 * 100%;
    }
  }
}
$col8: (5,6,7,8);
@each $col in $col8 {
  .col-#{$col} {
    width: 100%;
    @include respond-to-min-max($xs-d + 1,$sm-c){
      width: $col / 8 * 100%;
    }
    @include respond-to-min($sm-c + 1){
      width: $col / 12 * 100%;
    }
  }
}
$col12: (9,10,11);
@each $col in $col12 {
  .col-#{$col} {
    width: 100%;
    @include respond-to-min($sm-c + 1){
      width: $col / 12 * 100%;
    }
  }
}
.col-12 {
    width: 100%;
}

@each $break in $breakpoints-short {
  $bname: nth($break, 1);
  $bvalue_min: nth($break, 2);
  $bvalue_max: nth($break, 3);

  $col4: (1,2,3,4);
  @each $col in $col4 {
    .#{$bname}-col-#{$col} {
      @if $bvalue_max <= $xs-d {
        @include respond-to-min-max($bvalue_min,$bvalue_max) {
          width: $col / 4 * 100%;
        }
      } @else if $bvalue_max <= $sm-c {
        @include respond-to-min-max($bvalue_min,$bvalue_max){
          width: $col / 8 * 100%;
        }            
      } @else {
        @if $bvalue_max > 0 {
          @include respond-to-min-max($bvalue_min,$bvalue_max) {
            width: $col / 12 * 100%;
          }          
        } @else {
          @include respond-to-min($bvalue_min) {
            width: $col / 12 * 100%;
          }                    
        }
      }
    }
  }

  $col8: (5,6,7,8);
  @each $col in $col8 {
    .#{$bname}-col-#{$col} {
      @if $bvalue_max <= $xs-d {
        width: 100%;
      } @else if $bvalue_max <= $sm-c {
        @include respond-to-min-max($bvalue_min,$bvalue_max){
          width: $col / 8 * 100%;
        }            
      } @else {
        @if $bvalue_max > 0{
          @include respond-to-min-max($bvalue_min,$bvalue_max) {
            width: $col / 12 * 100%;
          }          
        } @else {
          @include respond-to-min($bvalue_min) {
            width: $col / 12 * 100%;
          }                    
        }
      }      
    }
  }

  $col12: (9,10,11);
  @each $col in $col12 {
    .#{$bname}-col-#{$col} {
      @if $bvalue_max <= $sm-c {
        width: 100%;
      } @else {
        @if $bvalue_max > 0{
          @include respond-to-min-max($bvalue_min,$bvalue_max) {
            width: $col / 12 * 100%;
          }          
        } @else {
          @include respond-to-min($bvalue_min) {
            width: $col / 12 * 100%;
          }                    
        }
      } 
    }
  }
  .#{$bname}-col-12 {
    width: 100%;
  }
}

@each $break in $breakpoints-columns {
  $bname: nth($break, 1);
  $bvalue_min: nth($break, 2);
  $bvalue_max: nth($break, 3);

  $col4: (1,2,3,4);
  @each $col in $col4 {
    .#{$bname}-col-#{$col} {
      @if $bvalue_max == $xs-d {
        @include respond-to-min-max($bvalue_min,$bvalue_max) {
          width: $col / 4 * 100%;
        }
      } @else if $bvalue_max == $sm-c {
        @include respond-to-min-max($bvalue_min,$bvalue_max){
          width: $col / 8 * 100%;
        }            
      } @else {
        @include respond-to-min($bvalue_min) {
          width: $col / 12 * 100%;
        }
      }                            
    }
  }
  $col8: (5,6,7,8);
  @each $col in $col8 {
    .#{$bname}-col-#{$col} {
      @if $bvalue_max == $xs-d {
        width: 100%;
      } @else if $bvalue_max == $sm-c {
        @include respond-to-min-max($bvalue_min,$bvalue_max){
          width: $col / 8 * 100%;
        }            
      } @else {
        @include respond-to-min($bvalue_min) {
          width: $col / 12 * 100%;
        }
      }                            
    }
  }
  $col12: (9,10,11);
  @each $col in $col12 {
    .#{$bname}-col-#{$col} {
      @if $bvalue_max > 0 {
        width: 100%;
      } @else {
        @include respond-to-min($bvalue_min) {
          width: $col / 12 * 100%;
        }
      }                                  
    }
  }
  .#{$bname}-col-12 {
    width: 100%;
  }
}


[class*="col-"] {
    display: inline-block;
    vertical-align: top;
}

.col-margin {
    margin-left: 8px;
    margin-right: 8px;
  @include respond-to(max-width,$sm-b){
      margin-left: 10px;
      margin-right: 10px;
    }
  @include respond-to(min-width,$sm-b + 1){
      margin-left: 12px;
      margin-right: 12px;
    }
}